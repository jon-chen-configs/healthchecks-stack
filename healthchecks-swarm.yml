services:
  healthchecks:
    image: lscr.io/linuxserver/healthchecks
    env_file: ["${ENV_DIR:-swarm-envs}/swarm/healthchecks-stack/healthchecks.env"]
    deploy:
      replicas: 1
      placement:
        # Docker (20.10.3) on Synology bug where env vars from env_file 
        # not set on container.
        # constraints: [node.platform.arch != aarch64]
        constraints:
          - node.platform.arch != aarch64
          - node.hostname != ${NAS_HOSTNAME}
      resources:
        limits:
          memory: 512M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.http.routers.healthcheck.rule=Host(`healthchecks.cynicsoft.net`)
        - traefik.http.routers.healthcheck.entrypoints=https
        - traefik.http.routers.healthcheck.middlewares=internal-whitelist
        - traefik.http.services.healthcheck.loadbalancer.server.port=8000
    environment:
      - DEFAULT_FROM_EMAIL=${SMTP_FROM}
    volumes:
      - healthchecks_config:/config
    networks:
      - default
      - traefik-net

  smtp:
    image: namshi/smtp:latest
    env_file: ["${ENV_DIR:-swarm-envs}/swarm/shared/namshi_smtp.env"]
    deploy:
      replicas: 1
      placement:
        # Docker (20.10.3) on Synology bug where env vars from env_file 
        # not set on container.
        # constraints: [node.platform.arch != aarch64]
        constraints:
          - node.platform.arch != aarch64
          - node.hostname != ${NAS_HOSTNAME}
    networks:
      - default


volumes:
  healthchecks_config:
    driver_opts:
      type: nfs
      o: addr=${NAS_HOST},nolock,noresvport,vers=2
      device: :${DATADIR}/healthchecks-stack/healthchecks


networks:
  default:
    name: healthchecks-swarm_default
    driver: overlay
    attachable: true
  traefik-net:
    external: true